- name: 'A.0.1 Create OS groups'
  hosts: '{{ hostlist }}'
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: 'A.0.2 Create OS group'
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: 'A.0.3 Socks tunnel setup'
  hosts: 'machine_windows'
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: '{{ blueid_shortcode }}'
        transaction_id: '{{ tower_job_id }}'
        trans_num: '{{ tower_job_id }}'
    - set_fact:
        ansible_become_method: runas
        ansible_become_user: system
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# now working on {{ hostlist }} host
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# server configuration collect
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# aeven_fstdout    stdout_file: "tool_aeven_servercheck_ITM_[date And Time]_staradc3001_stdout"   # created by frwk_toolsview.py NOT IN PLAYBOOK
# aeven_foutcsv    aeven_foutcsv: "servercheck_aeven_foutcsv.csv"   # the csv file of collected
# aeven_foutjsn    aeven_foutjsn: "servercheck_aeven_foutjsn.json"  # the json file of collected
# aeven_foutxml    aeven_foutxml: "servercheck_aeven_foutxml.xml"   # the xml file of collected
# aeven_fsrvcsv    aeven_fsrvcsv: "servercheck_aeven_fsrvcsv.csv"   # filtered window services
# aeven_fsftall    aeven_fsftall: "servercheck_aeven_fsftall.csv"   # ALL window services
# aeven_fsftcsv    aeven_fsftcsv: "servercheck_aeven_fsftcsv.csv"   # filtered installed programs
# aeven_fsrvall    aeven_fsrvall: "servercheck_aeven_fsrvall.csv"   # ALL installed programs
# aeven_portchk    aeven_portchk: 'servercheck_aeven_portchk.csv'   # portcheck aeven tools
# aeven_portitm    aeven_portitm: 'servercheck_aeven_portitm.csv'   # portcheck for ITM
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: 'A.1.0 Iterate over files and read content'
  hosts: '{{ hostlist }}'
  run_once: true
  ignore_errors: yes
  gather_facts: false
  vars:
    tmpdir: 'C:/Windows/Temp/servercheck/'
    cmdexec: 'servercheck.ps1'
    cmdexecPort: 'servercheck_ports_aeven_win.ps1'
    cmdexecPortITM: 'servercheck_ports_aeven_win.ps1'
    aeven_fstdout: 'servercheck_aeven_fstdout.log'
    files_to_read:
      aeven_foutcsv: 'servercheck_aeven_foutcsv.csv'
      aeven_fsrvcsv: 'servercheck_aeven_fsrvcsv.csv'
      aeven_fsftcsv: 'servercheck_aeven_fsftcsv.csv'
      aeven_foutjsn: 'servercheck_aeven_foutjsn.json'
      aeven_foutxml: 'servercheck_aeven_foutxml.xml'
      aeven_fsrvall: 'servercheck_aeven_fsrvall.csv'
      aeven_fsftall: 'servercheck_aeven_fsftall.csv'
      aeven_portchk: 'servercheck_aeven_portchk.csv'
      aeven_portitm: 'servercheck_aeven_portitm.csv'
  tasks:
    - name: 'A.1.1 run servercheck and collect files'
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
      # run servercheck and collect files
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
      block:
        - name: 'A.1.2 Delete directory {{ tmpdir }}'
          win_file:
            path: '{{ tmpdir }}'
            state: absent
        - name: 'A.1.3 copy github scripts'
          win_copy:
            src: scripts/
            dest: '{{ tmpdir }}'
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run servercheck.ps1
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'A.1.4 Run {{ cmdexec }} '
          win_shell: '{{ tmpdir }}{{ cmdexec }} 2>&1'
          args:
            chdir: '{{ tmpdir }}'
          register: running_cmdexec
        - name: 'A.1.5 pass stdout'
          debug:
            msg: 'aeven_fstdout ==>|{{ running_cmdexec.stdout }}'
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run cmdexecPort
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'A.1.6 Run {{ cmdexecPort }}'
          win_shell: '{{ tmpdir }}{{ cmdexecPort }} 2>&1'
          args:
            chdir: '{{ tmpdir }}'
          register: running_cmdexecPort
        - name: '"A.1.7 pass stdout'
          debug:
            msg: 'aeven_fstdout ==>|{{ running_cmdexecPort.stdout }}'
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run servercheck_ports_aeven_win.ps1
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'A.1.8 Run {{ cmdexecPortITM }}'
          win_shell: '{{ tmpdir }}{{ cmdexecPortITM }} 2>&1'
          args:
            chdir: '{{ tmpdir }}'
          register: running_cmdexecPortITM
        - name: 'A.1.9 pass stdout'
          debug:
            msg: 'aeven_fstdout ==>|{{ running_cmdexecPortITM.stdout }}'
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # loop Read files and get debug content
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'A.1.10 Read files and debug content'
          win_shell: 'Get-Content -LiteralPath {{ tmpdir }}{{ item.value }}'
          register: file_content
          loop: '{{ files_to_read | dict2items }}'
          loop_control:
            label: '{{ item.key }}'

        - name: 'A.1.11 file content to msg'
          debug:
            msg: '{{ item.item.key }} ==>|{{ item.stdout }}'
          loop: '{{ file_content.results }}'
          loop_control:
            label: '{{ item.item.key }}'

      # always:
      #   - name: Delete directory {{ tmpdir }}
      #     win_file:
      #       path: '{{ tmpdir }}'
      #       state: absent
