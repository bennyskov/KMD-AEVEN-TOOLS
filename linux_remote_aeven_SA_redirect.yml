- name: Create OS groups
  hosts: localhost
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Create OS group
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: Socks tunnel setup
  hosts: '{{ nodename }}'
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: '{{ blueid_shortcode }}'
        transaction_id: '{{ tower_job_id }}'
        trans_num: '{{ tower_job_id }}'

    - set_fact:
        ansible_become_user: root
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# working on LOCALHOST
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: gather_facts LOCALHOST
  hosts: localhost
  gather_facts: true
  tasks:
    - name: 'List homedir files'
      ignore_errors: yes
      shell: 'ls -lrt'
      register: script_homedir

    - name: Output list homedir
      debug:
        var: script_homedir.stdout_lines

    - meta: clear_host_errors

- name: 'running redirect script to assign another temp work for agent'
  hosts: '{{ nodename }}'
  become: true
  run_once: true
  gather_facts: false
  vars:
    tmpdir: '/opt/IBM/ITM/tmp/opsware-agent-linux/'
    agentdir: '/opt/opsware/agent/bin/'
    etcoptdir: '/etc/opt/opsware/agent/'
  tasks:
    - name: Copy, create, exec file
      block:
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # copy sa_redirect_tmp.sh
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: copy files
          copy:
            src: 'opsware-agent-linux/sa_redirect_tmp.sh'
            dest: '{{ tmpdir }}'
            mode: 0777

        - name: Set permissions for dir
          ignore_errors: yes
          file:
            path: '{{ tmpdir }}'
            mode: '0777'

        - name: 'Check if the sa_redirect_tmp.sh exists'
          ignore_errors: yes
          stat:
            path: '{{ tmpdir }}sa_redirect_tmp.sh'
          register: file_stat_redirect

        - name: 'Run sa_redirect_tmp'
          ignore_errors: yes
          shell: 'sh {{ tmpdir }}sa_redirect_tmp.sh 2>&1'
          args:
            chdir: '{{ tmpdir }}'
          register: result_from_redirect

        - name: 'send stdout_lines to ansible - redirect'
          ignore_errors: yes
          debug:
            msg: '#stdout_lines#{{ result_from_redirect.stdout_lines }}'
          when: file_stat_redirect.stat.exists

        - name: 'send stderr_lines to ansible - redirect'
          ignore_errors: yes
          debug:
            msg: '#stderr_lines#{{ result_from_redirect.stderr_lines }}'
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # list {{ agentdir }}
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'Check if agentdir exists before'
          stat:
            path: '{{ agentdir }}'
          register: check_agentdir

        - name: Set permissions for dir recurse
          ignore_errors: yes
          file:
            path: '{{ agentdir }}'
            state: directory
            mode: 0755
            recurse: yes
            force: yes
          when: check_agentdir.stat.exists

        - name: 'List {{ agentdir }} before'
          shell: 'ls -lrta {{ agentdir }}'
          register: list_agentdir_out
          when: check_agentdir.stat.exists

        - name: 'send content to ansible before'
          debug:
            var: list_agentdir_out.stdout_lines
          when: check_agentdir.stat.exists

        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # list {{ etcoptdir }}
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'Check if agentdir exists before'
          stat:
            path: '{{ etcoptdir }}'
          register: check_etcoptdir

        - name: Set permissions for file
          ignore_errors: yes
          file:
            path: '{{ etcoptdir }}mid'
            mode: 0644
          when: check_etcoptdir.stat.exists

        - name: Set permissions for file
          ignore_errors: yes
          file:
            path: '{{ etcoptdir }}agent_custom.args'
            mode: 0644
          when: check_etcoptdir.stat.exists

        - name: 'List {{ etcoptdir }} before'
          shell: 'ls -lrta {{ etcoptdir }}'
          register: list_etcoptdir_out
          when: check_etcoptdir.stat.exists

        - name: 'send content to ansible before'
          debug:
            var: list_etcoptdir_out.stdout_lines
          when: check_etcoptdir.stat.exists
