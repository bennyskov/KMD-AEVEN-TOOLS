---
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#step: begin and setup tunnel and credentials
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '1.A - Create OS groups'
  hosts: '{{ nodename }}'
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: '1.A.00 - Create OS ostype'
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: '2.B - Socks tunnel setup'
  hosts: '{{ nodename }}'
  gather_facts: false
  tasks:
    - include_role: # Not numbered per rules
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: '{{ blueid_shortcode }}'
        transaction_id: '{{ tower_job_id }}'
        trans_num: '{{ tower_job_id }}'

    - name: '2.B.00 - Set become user'
      set_fact:
        ansible_become_user: root

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# now working on {{ hostlist }} host
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# Installation playbook of a ITM agent on linux server
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Installation playbook of a ITM agent on Windows server {{ hostlist }}"
  hosts: "{{ hostlist }}"
  become: true
  gather_facts: true
  vars:
    itmZip: "ITM_lx8266_6307SP14-3330KMD.tar.gz"
    RepoUrl: "http://84.255.93.70:8080/repository/ITM/"
    tmpdir: "/tmp/scripttemp_dir"
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    # write global vars
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: "print debug vars {{ hostlist }}"
      debug:
        msg: |-
          "RepoUrl = {{ RepoUrl }}"
          "itmZip = {{ itmZip }}"
          "trans_num = {{ trans_num }}"
          "tmpdir = {{ tmpdir }}"
      tags:
        - debug_vars
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#step:  Download itmZip from repository to localhost, copy to target host and unzip
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '3.C - Download itmZip from repository to localhost, copy to target host and unzip'
  hosts: '{{ nodename }}'
  become: true
  gather_facts: false
  tasks:
    - name: '3.C.00 - start block'
      block:
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Download itmZip from repository to localhost (cacf host)
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: "Download {{ itmZip }} from repository to localhost"
          delegate_to: localhost
          run_once: true
          become: false
          get_url:
            url: "{{ RepoUrl }}{{ itmZip }}"
            dest: /tmp/{{ itmZip }}
            mode: '0644'
            force: true
          register: download_itmZip_result

        - name: "Debug installer download"
          debug:
            msg: |-
              "download_itmZip_result: {{ download_itmZip_result }}"
          tags:
            - debug_out

        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        #step: create scripttemp_dir and copy repository to {{ hostlist }} host
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: '3.C.01 - Create {{ tmpdir }} directory'
          file:
            path: "{{ tmpdir }}"
            state: directory
            mode: 0777

        - name: '3.C.02 - copy downloaded zip file to target host'
          copy:
            src: /tmp/{{ itmZip }}
            dest: "{{ tmpdir }}/{{ itmZip }}"
            mode: 0777
            remote_src: no

        - name: "Unzip {{ itmZip }} file"
          run_once: true
          unarchive:
            src: "{{ tmpdir }}/{{ itmZip }}"
            dest: "{{ tmpdir }}"
            remote_src: yes
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run python script
        # {{ tmpdir }}PortablePython/Scripts/python.exe {{ tmpdir }}ITMAgentInstall_linux.py
        # ITMAgentInstall_linux.cmd -nodename kmdwinitm001 -ccode kmn -shore nearshore -envir . -f
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------