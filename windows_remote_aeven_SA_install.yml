- name: Create OS groups
  hosts: "{{ hostlist }}"
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Create OS group
      group_by:
        key: "machine_{{ ostype }}"
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: Socks tunnel setup
  hosts: 'machine_windows'
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
        trans_num: "{{ tower_job_id }}"

    - set_fact:
        ansible_become_method: runas
        ansible_become_user: system

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# now working on {{ hostlist }} host
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# Installation playbook of Opsware agent on windows
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# aeven_saagout    saagtfile: "sa-agent_stdout.log"   # the one created by bat file
# aeven_rediout    redirfile: "sa-agent_rdiout.log"   # the redirect
# aeven_uninout    uninsfile: "sa-agent_uninstall_stdout.log"  the one created by bat file (uninstall)
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Installation playbook of SA Opsware agent for Aeven on server {{ hostlist }}"
  hosts: "{{ hostlist }}"
  become: true
  gather_facts: false
  vars:
    tmpdir: "C:/Windows/Temp/opsware-agent-windows/"  
    sagentdir: "C:/Program Files/Opsware/agent/pylibs3/cog/uninstall/"  
    saagtfile: "sa-agent_stdout.log"   # the one created by bat file
    redirfile: "sa-agent_rdiout.log"   # the redirect
    uninsfile: "sa-agent_uninstall_stdout.log" # the one created by bat file (uninstall)
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Uninstall
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------    
    - name: "SA.01.01 - check if install exists"
      stat:
        path: "{{ sagentdir }}agent_uninstall.bat" 
      register: file_stat      

    - name: UNINSTALL block (conditional if uninstall exists)
      block:
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run installer
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: Display file existence
          debug:
            msg: "The file exists."

        - name: "SA.02.01 - Run command"
          win_command: '"{{ sagentdir }}agent_uninstall.bat" --force > {{ tmpdir }}{{ redirfile }} 2>&1'
          args:
            chdir: "{{ sagentdir }}"
          register: script_run

        - name: "SA.02.02 - Output list"
          debug:
            var: script_run.stdout_lines
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # get the redirfile
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: "SA.02.03 - Read content from {{ redirfile }}" # the redirect
          ignore_errors: yes      
          win_shell: Get-Content -LiteralPath "{{ tmpdir }}{{ redirfile }}"
          register: file_uninstall_redirfile
        
        - name: "SA.02.04 - Display {{ redirfile }} content"
          debug:
            msg: |-
              "aeven_rediout {{ file_uninstall_redirfile.stdout }}"      

        - name: "SA.02.05 - Read content from {{ uninsfile }}"  # the one created by bat file
          ignore_errors: yes      
          win_shell: Get-Content -LiteralPath "{{ tmpdir }}{{ uninsfile }}"
          register: file_uninstall_uninsfile
        
        - name: "SA.02.06 - Display {{ uninsfile }} content"
          debug:
            msg: |-
              "aeven_uninout {{ file_uninstall_uninsfile.stdout }}"

        - name: "SA.02.07 - list dir of C:/Program Files/*"
          debug:
            var: dir_of_tmpdir_end.stdout_lines

        - name: "SA.02.08 - Delete temp C:/Program Files/Opsware/ agent directory"
          win_file:
            path: "C:/Program Files/Opsware/"
            state: absent          
      when: file_stat.stat.exists

    - name: INSTALL block
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Delete & create & copy files to dir {{ tmpdir }}
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
      block:
        - name: "SA.03.01 - Get PATH for machine"
          run_once: true
          raw: $ENV:PATH
          register: path_out

        - name: "SA.03.02 - Output result"
          debug:
            var: path_out.stdout_lines    
    
        - name: "SA.03.03 - Delete {{ tmpdir }} directory on {{ hostlist }}"
          win_file:
            path: "{{ tmpdir }}"
            state: absent

        - name: "SA.03.04 - Create {{ tmpdir }} directory on {{ hostlist }}"
          win_file:
            path: "{{ tmpdir }}"
            state: directory

        - name: "SA.03.05 - copy multiple items"
          win_copy: 
            src: "{{ item.src }}" 
            dest: "{{ item.dest }}"

          loop:
            - src: scripts/
              dest: "{{ tmpdir }}"

            - src: opsware-agent-windows/
              dest: "{{ tmpdir }}" 

        - name: "SA.03.06 - List {{ tmpdir }} BEFORE"
          win_shell: Get-ChildItem -Path {{ tmpdir }}
          register: dir_of_tmpdir_before
        
        - name: "SA.03.08 - list dir of {{ tmpdir }} at the BEFORE"
          debug:
            var: dir_of_tmpdir_before.stdout_lines 
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run installer
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: "SA.03.09 - Run command"
          win_command: "{{ tmpdir }}sa_agent_install.bat > {{ tmpdir }}{{ redirfile }} 2>&1"
          args:
            chdir: "{{ tmpdir }}"
          register: script_run

        - name: "SA.03.10 - Output list"
          debug:
            var: script_run.stdout_lines

        - name: "SA.03.11 - List {{ tmpdir }} AFTER"
          ignore_errors: yes      
          win_shell: Get-ChildItem -Path {{ tmpdir }}
          register: dir_of_tmpdir_after

        - name: "SA.03.12 - list dir of {{ tmpdir }} at the AFTER"
          debug:
            var: dir_of_tmpdir_after.stdout_lines 

        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # aeven_saagout    saagtfile: "sa-agent_stdout.log"   # the one created by bat file
        # aeven_rediout    redirfile: "sa-agent_rdiout.log"   # the redirect
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------

        - name: "SA.03.13 - Read content from {{ redirfile }}" # the redirect
          ignore_errors: yes      
          win_shell: Get-Content -LiteralPath "{{ tmpdir }}{{ redirfile }}"
          register: file_content_redirout
        
        - name: "SA.03.14 - Display {{ redirfile }} content"
          debug:
            msg: |-
              "aeven_rediout {{ file_content_redirout.stdout }}"      

        - name: "SA.03.15 - Read content from {{ saagtfile }}"  # the one created by bat file
          ignore_errors: yes      
          win_shell: Get-Content -LiteralPath "{{ tmpdir }}{{ saagtfile }}"
          register: file_content_saagtfile
        
        - name: "SA.03.16 - Display {{ saagtfile }} content"
          debug:
            msg: |-
              "aeven_saagout {{ file_content_saagtfile.stdout }}"

      always:
        - name: "SA.03.17 - Delete temp {{ tmpdir }} agent directory"
          win_file:
            path: "{{ tmpdir }}"
            state: absent
              