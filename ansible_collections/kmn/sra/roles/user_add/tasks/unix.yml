---
- name: "2.A2.1. Check if {{ data.username }} already exists"
  command: "id {{ data.username }}"
  register: unix_user_info
  ignore_errors: true
- name: "2.A2.2. Add user {{ data.username }}"
  ansible.builtin.user:
    comment: "{{ data.fullname | default(omit) }}"
    name: "{{ data.username }}"
    groups: "{{ data.groups | default(omit) }}"
    state: present
  failed_when: data.username is not defined or data.username | length == 0
  when: unix_user_info.rc == 1
- name: "2.A2.3. Add default SSH public key for {{ data.username }}"
  ansible.posix.authorized_key:
    user: "{{ data.username }}"
    key: "{{ data.sshkey | default(default_ssh_pub_key) }}"
    key_options: "{{ data.sshkey_options | default('') }}"
    state: present
  when:
    - unix_user_info.rc == 1
    - (data.sshkey is not defined) or (data.sshkey | length > 0)
- name: "2.A2.4. Validate sudoers profile for {{ data.username }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/unix/sudoers/{{ data.username }}_sudo"
  delegate_to: localhost
  become: no
  register: sudoers_profile
- name: "2.A2.5. Copy sudoers profile for {{ data.username }}"
  ansible.builtin.copy:
    src: "{{ role_path }}/files/unix/sudoers/{{ data.username }}_sudo"
    dest: "/etc/sudoers.d/{{ data.username }}_sudo"
    mode: "0440"
  when:
    - unix_user_info.rc == 1
    - sudoers_profile.stat.exists
