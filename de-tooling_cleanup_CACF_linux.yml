# filepath: d:\scripts\GIT\KMD-AEVEN-TOOLS\de-tooling_cleanup_CACF_linux.yml
---
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#step: begin and setup tunnel and credentials
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '1.A - Create OS groups'
  hosts: localhost
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: '1.A.00 - Create OS group'
      group_by:
        key: "machine_{{ ostype }}"
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: '2.B - Socks tunnel setup'
  hosts: localhost
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
        trans_num: "{{ tower_job_id }}"

    - name: '2.B.00 - Set become method and user'
      set_fact:
        ansible_become_method: runas
        ansible_become_user: system
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#step working on localhost
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '3.C - Gather facts localhost'
  hosts: localhost
  gather_facts: true
  vars:
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    #step debug facts and list local directories for ansible localhost
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: '3.C.00 - Debug facts and list local directories for ansible localhost'
      block:
        # - name: '3.C.01 - Debug facts'
        #   debug:
        #     msg: |-
        #       '{{ ansible_facts }}'
        #   tags:
        #     - debug_facts

        - name: '3.C.02 - whoami'
          shell: 'whoami'
          register: script_whoami

        - name: '3.C.03 - Output list whoami'
          debug:
            var: script_whoami.stdout_lines

        - name: '3.C.04 - List homedir files'
          shell: 'ls -lrt'
          register: script_homedir

        - name: '3.C.05 - Output list homedir'
          debug:
            var: script_homedir.stdout_lines

        - name: '3.C.06 - List /tmp/'
          shell: 'ls -lrt /tmp/'
          register: script_tmp

        - name: '3.C.07 - Output list tmp'
          debug:
            var: script_tmp.stdout_lines

        - name: '3.C.08 - df -k'
          shell: 'df -k'
          register: script_df

        - name: '3.C.09 - Output of df'
          debug:
            var: script_df.stdout_lines

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
#step we are now running from remote host
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '4.D - Cleanup ansible / CACF files on host'
  hosts: '{{ nodename }}'
  gather_facts: false
  become: true
  run_once: true
  ignore_errors: yes
  vars:
    nodename: '{{ nodename }}'
    ansib_user1: 'kmduxat1'
    ansib_user2: 'kmduxat2'
    # SSH connection timeout settings to avoid disconnection during long-running operations
    ansible_ssh_timeout: 60
    ansible_persistent_connect_timeout: 180
    ansible_connection_timeout: 180
    ansible_ssh_args: '-o ServerAliveInterval=30 -o ServerAliveCountMax=10 -o ControlMaster=auto -o ControlPersist=180s'
    cleanup_directories:
      - path: '/var/opt/ansible'
        description: 'CACF Directory'
      - path: '/var/opt/ansible_workdir'
        description: 'Ansible Workdir'
      - path: '/etc/ansible'
        description: 'Ansible Configuration'
      - path: '/root/.ansible_async'
        description: 'Ansible Async Directory'
      - path: '/tmp/gts-ansible'
        description: 'GTS Ansible Temp Directory'
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    #step cleanup ansible / CACF files on host
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: '4.D.00 - Cleanup ansible directories on host {{ nodename }}'
      include_role:
        name: cleanup_dir
      vars:
        cleanup_path: "{{ item.path }}"
        dir_mode: "0775"
        dir_owner: "root"
        dir_group: "root"
        force_delete: true
        lsof_command: "/usr/sbin/lsof"
      loop: "{{ cleanup_directories }}"
      loop_control:
        label: "{{ item.description }} ({{ item.path }})"

    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    #step remove ansible users
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: '4.D.10 - Define list of users to clean up'
      set_fact:
        users_to_cleanup:
          - username: '{{ ansib_user1 }}'
            description: 'Ansible User 1 (kmduxat1)'
          - username: '{{ ansib_user2 }}'
            description: 'Ansible User 2 (kmduxat2)'

    - name: '4.D.11 - Cleanup and remove users'
      include_role:
        name: remove_user_cleanup
      vars:
        username: "{{ item.username }}"
        remove_home: true
        force_removal: true
        handle_locked_processes: true
        check_remaining_files: true
      loop: "{{ users_to_cleanup }}"
      loop_control:
        label: "Removing {{ item.description }}"
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
      #step Find cleanup candidates
      # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: '4.D.12 - find cleanup candidates'
      include_role:
        name: find_cleanup_candidates
      vars:
        search_patterns:
          - name: "BigFix"
            pattern: "bigfix"
            case_sensitive: false
          - name: "BESClient"
            pattern: "BESClient"
            case_sensitive: false
          - name: "ITM"
            pattern: "ITM"
            case_sensitive: true
          - name: "Ansible"
            pattern: "ansible"
            case_sensitive: true
          - name: "ILMT"
            pattern: "ILMT"
            case_sensitive: true
        search_path: "/"
        exclude_dirs:
          - "/proc"
          - "/sys"
          - "/dev"
          - "/run"
        output_format: "detailed"
        save_to_file: true
        results_file: "/tmp/cleanup_candidates_{{ ansible_date_time.date }}.txt"

    - name: "4.D.13 - Copy file cleanup_candidates from target host (src) to ansible tower local host (dest)"
      copy:
        src: "/tmp/cleanup_candidates_{{ ansible_date_time.date }}.txt"
        dest: "cleanup_results/{{ inventory_hostname }}_cleanup_candidates.txt"
        remote_src: yes
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#step working on localhost
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: '4.E - Gather facts localhost'
  hosts: localhost
  gather_facts: true
  ignore_errors: yes
  vars:
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    #step debug facts and list local directories for ansible localhost
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: '4.E.00 - list local directories for ansible localhost AFTER cleanup'
      block:
        - name: '4.E.02 - List homedir files'
          shell: 'ls -lrt'
          register: script_homedir

        - name: '4.E.03 - Output list homedir'
          debug:
            var: script_homedir.stdout_lines

        - name: '4.E.04 - List /tmp/'
          shell: 'ls -lrt /tmp/'
          register: script_tmp

        - name: '4.E.05 - Output list tmp'
          debug:
            var: script_tmp.stdout_lines

        - name: '4.E.06 - Collect server mountpoints information'
          shell: 'df -h'
          register: mountpoint_info

        - name: '4.E.07 - Output mountpoint information'
          debug:
            var: mountpoint_info.stdout_lines

        - name: '4.E.08 - Save mountpoint information to file'
          copy:
            content: "Server: {{ inventory_hostname }}\nDate: {{ ansible_date_time.date }}\n\n{{ mountpoint_info.stdout }}"
            dest: "cleanup_results/{{ inventory_hostname }}_mountpoints.txt"

        - name: "4.E.09 - Copy file mountpoint from target host (src) to ansible tower local host (dest)"
          copy:
            src: "/tmp/cleanup_candidates_{{ ansible_date_time.date }}.txt"
            dest: "cleanup_results/{{ inventory_hostname }}_cleanup_candidates.txt"
            remote_src: yes

        # - name: '4.E.09 - Push mountpoint information to Git repository'
        #   include_role:
        #     name: git_operations
        #   vars:
        #     git_repo_url: "{{ git_repository_url | default('https://github.kyndryl.net/eu-nordic-kmn/KMD-AEVEN-TOOLS.git') }}"
        #     git_branch: "{{ git_branch | default('main') }}"
        #     git_user_name: "Ansible Tower"
        #     git_user_email: "ansible@tower.local"
        #     git_credentials_method: "{{ git_auth_method | default('https_token') }}"
        #     git_token: "{{ git_access_token | default('') }}"
        #     local_repo_path: "/tmp/kmd_aeven_tools_repo"
        #     files_to_commit:
        #       - source: "cleanup_results/{{ inventory_hostname }}_mountpoints.txt"
        #         dest: "cleanup_results/{{ inventory_hostname }}_mountpoints.txt"
        #         required: false
        #     commit_message: "Added mountpoint information from {{ inventory_hostname }} - {{ ansible_date_time.date }}"


        # - name: '4.D.13 - Push cleanup candidates file back to Git repository'
        #   include_role:
        #     name: git_operations
        #   vars:
        #     git_repo_url: "{{ git_repository_url | default('https://github.kyndryl.net/eu-nordic-kmn/KMD-AEVEN-TOOLS.git') }}"
        #     git_branch: "{{ git_branch | default('main') }}"
        #     git_user_name: "Ansible Tower"
        #     git_user_email: "ansible@tower.local"
        #     git_credentials_method: "{{ git_auth_method | default('https_token') }}"
        #     git_token: "{{ git_access_token | default('') }}"
        #     local_repo_path: "/tmp/kmd_aeven_tools_repo"
        #     files_to_commit:
        #       - source: "/tmp/cleanup_candidates_{{ ansible_date_time.date }}.txt"
        #         dest: "cleanup_results/{{ inventory_hostname }}_cleanup_candidates.txt"
        #         required: false
        #     commit_message: "Added cleanup candidates from {{ inventory_hostname }} - {{ ansible_date_time.date }}"

        # - name: '4.D.14 - Push cleanup candidates to Git repository'
        #   include_tasks: 'roles/push_cleanup_results.yml'
        #   vars:
        #     git_repository_url: "https://github.kyndryl.net/eu-nordic-kmn/KMD-AEVEN-TOOLS.git"  # Change to your actual repository URL
        #     git_branch: "main"                                                                  # Change if your branch is different
        #     git_user: "git_cred_tools"                                                          # Your Git username
        #     git_token: "{{ lookup('env', 'GIT_TOKEN') }}"                                       # Access token from environment variable