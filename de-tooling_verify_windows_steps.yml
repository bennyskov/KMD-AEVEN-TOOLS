
    # Primary verification - Directory/File checks (Most Reliable)
    - name: Verify ITM installation directories cleared
      win_shell: (Test-Path "C:/IBM/ITM/bin") -and ((Get-ChildItem -Path "C:/IBM/ITM" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      ignore_errors: yes
      register: check_itm_files

    - name: Verify Opsware installation directories cleared
      win_shell: (Test-Path "C:/Program Files/Opsware/agent/bin") -and ((Get-ChildItem -Path "C:/Program Files/Opsware/agent/bin" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      ignore_errors: yes
      register: check_opsware_files

    # Secondary verification - Service checks
    - name: Check ITM services status
      win_shell: "[bool](Get-Service KNT*, K06* -ErrorAction SilentlyContinue)"
      ignore_errors: yes
      register: get_service_itm

    - name: Check Opsware services status
      win_shell: "[bool](Get-Service opsware* -ErrorAction SilentlyContinue)"
      ignore_errors: yes
      register: get_service_SA

    # Ansible directory checks
    - name: Test if ansible workdir has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/ansible_workdir") -and ((Get-ChildItem -Path "C:/ansible_workdir" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_ansible_workdir

    - name: Test if ansible ProgramData has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/ProgramData/ansible") -and ((Get-ChildItem -Path "C:/ProgramData/ansible" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_ansible_programdata

    - name: Test if BigFix ProgramData has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/ProgramData/BigFix") -and ((Get-ChildItem -Path "C:/ProgramData/BigFix" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_bigfix_programdata

    - name: Test if ilmt ProgramData has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/ProgramData/ilmt") -and ((Get-ChildItem -Path "C:/ProgramData/ilmt" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_ilmt_programdata

    - name: Test if ansible Program Files has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/PROGRA~1/ansible") -and ((Get-ChildItem -Path "C:/PROGRA~1/ansible" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_ansible_progfiles

    - name: Test if BigFix Program Files has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/PROGRA~1/BigFix") -and ((Get-ChildItem -Path "C:/PROGRA~1/BigFix" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_bigfix_progfiles

    - name: Test if ilmt Program Files has been cleared
      ignore_errors: yes
      win_shell: (Test-Path "C:/PROGRA~1/ilmt") -and ((Get-ChildItem -Path "C:/PROGRA~1/ilmt" -Recurse -File -ErrorAction SilentlyContinue | Measure-Object).Count -gt 0)
      register: check_ilmt_progfiles

    # Final determination based on file presence
    - name: Set cleanup status
      set_fact:
        itm_cleanup_needed: "{{ check_itm_files.stdout == 'True' }}"
        opsware_cleanup_needed: "{{ check_opsware_files.stdout == 'True' }}"
        ansible_cleanup_needed: "{{ (check_ansible_workdir.stdout == 'True') or (check_ansible_programdata.stdout == 'True') or (check_ansible_progfiles.stdout == 'True') }}"
        bigfix_cleanup_needed: "{{ (check_bigfix_programdata.stdout == 'True') or (check_bigfix_progfiles.stdout == 'True') }}"
        ilmt_cleanup_needed: "{{ (check_ilmt_programdata.stdout == 'True') or (check_ilmt_progfiles.stdout == 'True') }}"

    - name: Final verification summary
      debug:
        msg: |
          ═══════════════════════════════════════════════════
          🎯 DE-TOOLING VERIFICATION SUMMARY
          ═══════════════════════════════════════════════════

          Host: {{ inventory_hostname }}
          Organization: {{ detected_org }}
          Inventory: {{ detected_inventory }}
          OS Family: {{ ansible_facts['os_family'] | default('Unknown') }}
          Credential Source: {{ credential_source | default('none') }}

          📊 CLEANUP STATUS:
          • ITM Cleanup Required: {{ itm_cleanup_needed | default('Unknown') }}
          • Opsware Cleanup Required: {{ opsware_cleanup_needed | default('Unknown') }}
          • Ansible Cleanup Required: {{ ansible_cleanup_needed | default('Unknown') }}
          • BigFix Cleanup Required: {{ bigfix_cleanup_needed | default('Unknown') }}
          • ILMT Cleanup Required: {{ ilmt_cleanup_needed | default('Unknown') }}

          🏆 OVERALL STATUS: {{ 'CLEANUP NEEDED' if (itm_cleanup_needed or opsware_cleanup_needed or ansible_cleanup_needed or bigfix_cleanup_needed or ilmt_cleanup_needed) else 'VERIFICATION PASSED' }}

          ═══════════════════════════════════════════════════
