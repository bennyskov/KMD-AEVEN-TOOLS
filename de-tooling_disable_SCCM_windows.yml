- name: 'Create OS groups'
  hosts: localhost
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: 'Create OS group'
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: 'Socks tunnel setup'
  hosts: localhost
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: '{{ blueid_shortcode }}'
        transaction_id: '{{ tower_job_id }}'
        trans_num: '{{ tower_job_id }}'

    - set_fact:
        ansible_become_method: runas
        ansible_become_user: system
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: 'disable CcmExec services'
  hosts: '{{ nodename }}'
  become: true
  gather_facts: false
  vars:
    # Add WinRM connection settings to prevent SPNEGO authentication errors
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_operation_timeout_sec: 60
    ansible_winrm_read_timeout_sec: 70
    ansible_winrm_scheme: http
    ansible_port: 5985
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    # disable block
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: disable CcmExec block
      block:
        # Check if CcmExec service is already disabled
        - name: 'Check CcmExec service status'
          ignore_errors: true
          run_once: true
          win_shell: 'Get-Service "CcmExec" -ErrorAction SilentlyContinue | Select-Object -Property Name, Status, StartType'
          register: CcmExec_service_status

        - name: 'Display current CcmExec service status'
          ignore_errors: true
          debug:
            msg: 'Current CcmExec service status: {{ CcmExec_service_status.stdout }}'

        - name: 'Skip disabling if already disabled'
          ignore_errors: true
          set_fact:
            skip_disable: '{{ "Disabled" in CcmExec_service_status.stdout }}'

        - name: 'Show skip status'
          debug:
            msg: 'Service is already disabled, skipping disable operation'
          when: skip_disable | default(false)
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # disable all CcmExec services
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'Stop and disable CcmExec service'
          ignore_errors: true
          win_service:
            name: CcmExec
            state: stopped
            start_mode: disabled
          when: not skip_disable | default(false)
          register: service_disabled

        - name: 'Display service disable results'
          ignore_errors: true
          debug:
            msg: 'CcmExec service stopped and disabled successfully'
          when: service_disabled is changed
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # disable all CcmExec services
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'list CcmExec services'
          ignore_errors: true
          run_once: true
          win_shell: 'Get-Service "CcmExec" -ErrorAction SilentlyContinue | format-list *'
          register: CcmExec_services_list

        - name: 'Display CcmExec_services_list'
          debug:
            msg: |-
              'CcmExec_services_list: {{ CcmExec_services_list.stdout }}'
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    # disable block
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: disable ccmsetup block
      block:
        # Check if ccmsetup service is already disabled
        - name: 'Check ccmsetup service status'
          ignore_errors: true
          run_once: true
          win_shell: 'Get-Service "ccmsetup" -ErrorAction SilentlyContinue | Select-Object -Property Name, Status, StartType'
          register: ccmsetup_service_status

        - name: 'Display current ccmsetup service status'
          debug:
            msg: 'Current ccmsetup service status: {{ ccmsetup_service_status.stdout }}'

        - name: 'Skip disabling if already disabled'
          set_fact:
            skip_disable: '{{ "Disabled" in ccmsetup_service_status.stdout }}'

        - name: 'Show skip status'
          debug:
            msg: 'Service is already disabled, skipping disable operation'
          when: skip_disable | default(false)
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # disable all ccmsetup services
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'Stop and disable ccmsetup service'
          ignore_errors: true
          win_service:
            name: ccmsetup
            state: stopped
            start_mode: disabled
          when: not skip_disable | default(false)
          register: service_disabled

        - name: 'Display service disable results'
          ignore_errors: true
          debug:
            msg: 'ccmsetup service stopped and disabled successfully'
          when: service_disabled is changed
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # disable all ccmsetup services
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: 'list ccmsetup services'
          ignore_errors: true
          run_once: true
          win_shell: 'Get-Service "ccmsetup" -ErrorAction SilentlyContinue | format-list *'
          register: ccmsetup_services_list

        - name: 'Display ccmsetup_services_list'
          debug:
            msg: |-
              'ccmsetup_services_list: {{ ccmsetup_services_list.stdout }}'