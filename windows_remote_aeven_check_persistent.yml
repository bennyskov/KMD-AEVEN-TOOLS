- name: Create OS groups
  hosts: "{{ hostlist }}"
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Create OS group
      group_by:
        key: "machine_{{ ostype }}"
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: Socks tunnel setup
  hosts: 'machine_windows'
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
        trans_num: "{{ tower_job_id }}"

    - set_fact:
        ansible_become_method: runas
        ansible_become_user: system
        
- name: Get script result on windows nodes
  hosts: 'machine_windows'
  become: true
  gather_facts: false
  vars:
      tmpdir: "C:/Windows/Temp/"
      stdoutfile: "check_for_persistent_stdout.log"  
  tasks:
    - name: "Get current machine"
      run_once: true
      raw: $ENV:PATH
      register: path_out
    - name: "Output result"
      debug:
        var: path_out.stdout_lines
             
    - name: Copy, create, fetch file
      block:
        - name: Create temp_dir directory
          win_file:
            path: "{{ tmpdir }}"
            state: directory

        - name: Copy file to temp directory
          win_copy:
            src: "scripts/check_for_persistent_route.ps1"
            dest: "{{ tmpdir }}check_for_persistent_route.ps1"

        - name: Run powershell
          win_shell: "{{ tmpdir }}check_for_persistent_route.ps1 > {{ tmpdir }}{{ stdoutfile }} 2>&1"
          args:
            chdir: "{{ tmpdir }}"
          register: script_run_persistent

        - name: Output list
          debug:
            var: script_run_persistent.stdout_lines
            
        - name: "Read content from {{ stdoutfile }}"
          run_once: true
          win_shell: Get-Content -LiteralPath "{{ tmpdir }}{{ stdoutfile }}"
          register: file_content_stdout
          
        - name: "Display content in stdout"
          debug:
            msg: |-
              "sa_agent_stdout_log {{ file_content_stdout.stdout }}"      
      # always:
      #   - name: Delete scripttemp_dir directory
      #     win_file:
      #       path: "{{ tmpdir }}"
      #       state: absent