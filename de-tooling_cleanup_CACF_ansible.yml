- name: Create OS groups
  hosts: '{{ hostlist }}'
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Create OS group
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: Socks tunnel setup
  hosts: 'machine_windows'
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: '{{ blueid_shortcode }}'
        transaction_id: '{{ tower_job_id }}'
        trans_num: '{{ tower_job_id }}'

    - set_fact:
        ansible_become_method: runas
        ansible_become_user: system

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# The whole playbook is running from ansible tower host
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: 'Export of on host from ansible itower inventory and then remove the host from all inventories'
  hosts: localhost
  gather_facts: false
  become: false
  run_once: true
  ignore_errors: yes
  vars:
    nodename: '{{ nodename }}'
    # tower_host: 'https://ansible-tower-web-svc-tower.apps.kmdcacf001.adminkmd.local'
    # tower_username: 'functional_id_001'
    # tower_password: 'm9AHKuXYa*MeZZWLsHqB'
  tasks:
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Export host from inventory
    # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
    - name: 'A.0.0 Export host from inventory'
      block:
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        # run uninstall using ccmsetup
        # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: Create tower-cli config
          include_role:
            name: towercli-init

        - name: Get host information using AWX command
          shell: "awx-cli host list --name={{ nodename }} -f yaml"
          register: host_response
          delegate_to: localhost
          failed_when: false
          changed_when: false

        - name: Set host data from command output
          set_fact:
            host_data: "{{ host_response.stdout | from_yaml }}"
          when: host_response.rc == 0

        - name: List inventories for the host
          debug:
            msg: "Host {{ nodename }} found in inventory: {{ item.inventory_name }}"
          loop: "{{ host_data.results }}"
          when: host_data is defined and host_data.results | length > 0