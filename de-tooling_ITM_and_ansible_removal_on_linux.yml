- name: 'A.0.0 Create OS groups'
  hosts: localhost
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: 'A.0.1 Create OS group'
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: 'A.0.1 Socks tunnel setup'
  hosts: localhost
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
    - set_fact:
        ansible_job_id: '{{ tower_job_id }}'
        ansible_become_method: runas
        ansible_become_user: system
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# runn de-tooling perl script
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# -d    write debug messages
# -u    remove ansible users. "kmduxat2,kmnuxat1,kmnuxat2,kmwuxat1,kmwuxat2,ug2uxat1,ug2uxat2,yl5uxat1,yl5uxat2" #!NOTE this is point of no return. NO ANSIBLE AND NO ITM
#
# shell: perl -w de-tooling_ITM_and_ansible_removal_on_linux.pl -d -u
#
# "nodename" : "kmdwinitm001"
# "removeAnsibleUsers": "-u"
# "debugScript": "-d"
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: 'A.1.0 de-tooling of servers as part of handover to Aeven'
  hosts: localhost
  gather_facts: false
  vars:
    nodename: '{{ nodename }}'
    removeAnsibleUsers: '{{ removeAnsibleUsers }}'
    debugScript: '{{ debugScript }}'
  # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
  # set_maintenance_mode
  # -----------------------------------------------------------------------------------------------------------------------------------------------------------------
  tasks:
  - name: 'A.1.2 Run de-tooling script'
    shell: >
      perl -w de-tooling_ITM_and_ansible_removal_on_linux.pl
      {{ removeAnsibleUsers }}
      {{ debugScript }}
    args:
      chdir: "scripts/"
    register: script_stdout
      # no_log: true

  - name: 'A.1.3 pass stdout'
    ignore_errors: true
    debug:
      msg: 'de-tool_stddout ==>|{{ script_stdout.stdout }}'
    when: script_stdout.stat.exists

  - name: 'A.1.4 - stat uninstall_log'
    ignore_errors: true
    stat:
      path: "de-tooling_ITM_and_ansible_removal_on_linux.log"
    args:
      chdir: "scripts/"
    register: stat_uninstall_log

  - name: 'A.1.5 - Read content from cleanup_candidates'
    shell: "cat de-tooling_ITM_and_ansible_removal_on_linux.log"
    args:
      chdir: "scripts/"
    register: cat_uninstall_log
    when: stat_uninstall_log.stat.exists

  - name: 'A.1.6 pass uninstall_log'
    ignore_errors: true
    debug:
      msg: 'de-tool_uninstall_log ==>|{{ cat_uninstall_log.stdout }}'
    when: cat_uninstall_log.stat.exists