---
- name: 'A.0.0 Create OS groups'
  hosts: localhost
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: 'A.0.1 Create OS group'
      group_by:
        key: 'machine_{{ ostype }}'
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: 'A.0.1 Socks tunnel setup'
  hosts: localhost
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
    - set_fact:
        ansible_job_id: '{{ tower_job_id }}'
        ansible_become_method: runas
        ansible_become_user: system
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# runn de-tooling perl script
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# -debugScript            write debug messages
# -removeAnsibleUsers     remove ansible users. "kmduxat2,kmnuxat1,kmnuxat2,kmwuxat1,kmwuxat2,ug2uxat1,ug2uxat2,yl5uxat1,yl5uxat2" #!NOTE this is point of no return. NO ANSIBLE AND NO ITM
#
# shell: perl -w de-tooling_ITM_and_ansible_removal_on_linux.pl -nodename [nodename] -removeAnsibleUsers -debugScript
#
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: 'A.1.0 de-tooling of servers as part of handover to Aeven'
  hosts: '{{ nodename }}'
  become: true
  gather_facts: false
  tasks:
    - name: 'A.1.02 - Create /tmp/scripttemp_dir'
      ignore_errors: yes
      file:
        path: /tmp/scripttemp_dir
        state: directory
        mode: 0777
        owner: root
        group: root
        recurse: yes
        force: yes

    - name: 'Check if agentdir exists before'
      stat:
        path: /tmp/scripttemp_dir
      register: check_agentdir

    - name: 'A.1.03 - copy files'
      ignore_errors: yes
      copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        mode: 0777
      loop:
        - src: scripts/
          dest: /tmp/scripttemp_dir
      when: check_agentdir.stat.exists

    - name: 'A.1.04 Run de-tooling script'
      ignore_errors: true
      shell: perl -w de-tooling_ITM_and_ansible_removal_on_linux.pl -nodename {{ nodename }} {{ removeAnsibleUsers }} {{ debugScript }}
      args:
        chdir: /tmp/scripttemp_dir
      when: check_agentdir.stat.exists

    - name: 'A.1.05 pass stdout'
      ignore_errors: true
      debug:
        msg: 'de-tool_stddout ==>|{{ script_stdout.stdout }}'

    - name: 'A.1.06 - stat uninstall_log'
      ignore_errors: true
      stat:
        path: de_tooling_removal_linux.log
      args:
        chdir: /tmp/scripttemp_dir
      register: stat_uninstall_log

    - name: 'A.1.07 - Read content'
      ignore_errors: true
      shell: cat de_tooling_removal_linux.log
      args:
        chdir: /tmp/scripttemp_dir
      register: cat_uninstall_log

    - name: 'A.1.08 pass uninstall_log'
      ignore_errors: true
      debug:
        msg: 'de-tool_uninstall_log ==>|{{ cat_uninstall_log.stdout }}'
