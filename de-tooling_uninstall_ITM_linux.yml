---
- name: Create OS groups
  hosts: "{{ nodename }}"
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Create OS group
      group_by:
        key: "machine_{{ ostype }}"
      changed_when: false
      when: ostype is defined
      delegate_to: localhost

- name: Socks tunnel setup
  hosts: "{{ nodename }}"
  gather_facts: false
  tasks:
    - include_role:
        name: ansible-role-event-socks-tunnel
        apply:
          check_mode: false
          run_once: true
          delegate_to: localhost
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
        trans_num: "{{ tower_job_id }}"

    - set_fact:
        ansible_become_user: root

- name: Get script result on linux nodes
  hosts: "{{ nodename }}"
  become: true
  gather_facts: false
  tasks:
    - name: Copy, create, fetch file
      block:
        - name: Create prtemp_dir directory
          file:
            path: /tmp/scripttemp_dir
            state: directory
            mode: 0777

        - name: copy multiple items
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: 0777

          loop:
            - src: scripts/ITMAgentUNinstall_linux.pl
              dest: /tmp/scripttemp_dir/ITMAgentUNinstall_linux.pl

        - name: Run command
          shell: perl -w ITMAgentUNinstall_linux.pl -d
          args:
            chdir: /tmp/scripttemp_dir
          register: script_run
        - name: Output list
          debug:
            var: script_run.stdout_lines

        - name: Delete /opt/IBM/ITM/ directory
          file:
            path: /opt/IBM/ITM/
            state: absent

        - name: Delete scripttemp_dir directory
          ignore_errors: yes
          file:
            path: /tmp/scripttemp_dir
            state: absent

        - name: Delete ansible directory
          ignore_errors: yes
          file:
            path: /var/opt/ansible
            state: absent

        - name: 'List /opt/IBM/ITM/'
          ignore_errors: yes
          shell: 'ls -lrta /opt/IBM/ITM/'
          register: list_agentdir_out
        - name: 'send output to ansible'
          debug:
            var: list_agentdir_out.stdout_lines
